name: CI

on:
  push:
    branches: "*"
  pull_request:
    branches: "*"

jobs:
  test:
    if: "!contains(github.event.head_commit.message, 'skip-ci')"

    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: ["24.x"]

    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix['node-version'] }}

      - uses: pnpm/action-setup@v4
        with:
          run_install: false
          version: 10

      - name: pnpm-store-dir
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: pnpm-cache-setup
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ matrix.node-version }}-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-${{ matrix.node-version }}-${{ env.cache-name }}-
            ${{ runner.os }}-pnpm-store-${{ matrix.node-version }}-

      - name: Install deps
        run: pnpm i
      - uses: extractions/setup-just@v3
      - name: Build and Test
        run: just ci

  release:
    name: Release
    runs-on: ubuntu-latest
    # only run on main branch and if 'skip-release' is not in the commit message
    if: "!contains(github.event.head_commit.message, 'skip-release') && github.event_name != 'pull_request' && github.ref == 'refs/heads/main'"
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: ${{ matrix['node-version'] }}
      - name: setup-npmrc
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
      - uses: pnpm/action-setup@v4
        with:
          run_install: false
          version: 10

      - name: pnpm-store-dir
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - name: pnpm-cache-setup
        uses: actions/cache@v4
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ matrix.node-version }}-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-${{ matrix.node-version }}-${{ env.cache-name }}-
            ${{ runner.os }}-pnpm-store-${{ matrix.node-version }}-

      - name: Install deps
        run: pnpm i
      - uses: extractions/setup-just@v3
      - name: create-release-pr
        id: changesets
        uses: changesets/action@v1
        with:
          version: pnpm ci:version
          commit: "chore: update versions"
          title: "chore: update versions"
          cwd: ${{ github.workspace }}
        env:
          # See https://github.com/changesets/action/issues/147
          HOME: ${{ github.workspace }}
          GITHUB_TOKEN: ${{ secrets.CHANGESETS_GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: publish
        if: steps.changesets.outputs.hasChangesets == 'false'
        run: |
          pnpm publish -r
          rm -rf ~/.npmrc

# =============================================================================
# OLD BROKEN PUBLISH...
# =============================================================================
#      - name: Create Release Pull Request or Publish to npm
#        id: changesets
#        uses: changesets/action@v1
#        with:
#          version: pnpm ci:version
#          commit: "chore: update versions"
#          title: "chore: update versions"
#          publish: pnpm ci:publish
#          cwd: ${{ github.workspace }}
#        env:
#          # See https://github.com/changesets/action/issues/147
#          HOME: ${{ github.workspace }}
#          GITHUB_TOKEN: ${{ secrets.CHANGESETS_GITHUB_TOKEN }}
#          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
